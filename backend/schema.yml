openapi: 3.0.3
info:
  title: Ridly API
  version: 1.0.0
  description: Outdoor Treasure Hunt
paths:
  /event/{id}/:
    get:
      operationId: event
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /event/{id}/join/:
    post:
      operationId: join_event
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - event
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventJoin'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /event/joined/:
    get:
      operationId: joined_events
      tags:
      - event
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /event/upcoming/:
    get:
      operationId: upcoming_events
      tags:
      - event
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
  /hunt/{id}/:
    get:
      operationId: hunt
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - hunt
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hunt'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /hunt/{id}/clue/{clue_order}/:
    get:
      operationId: hunt_clue
      parameters:
      - in: path
        name: clue_order
        schema:
          type: integer
        required: true
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - hunt
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HuntClue'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /oauth/google/login/:
    post:
      operationId: oauth_google_login
      tags:
      - oauth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /user/complete-signup/:
    put:
      operationId: user_complete_signup
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteSignup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompleteSignup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompleteSignup'
        required: true
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteSignup'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /user/logout/:
    delete:
      operationId: user_logout
      tags:
      - user
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      responses:
        '204':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /user/me/:
    get:
      operationId: user_me
      tags:
      - user
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
  /user/update/location/:
    put:
      operationId: user_update_last_known_location
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLastKnownLocation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateLastKnownLocation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateLastKnownLocation'
        required: true
      security:
      - cookieAuth: []
      - JWTAuthentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateLastKnownLocation'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: ''
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedError'
          description: ''
components:
  schemas:
    CompleteSignup:
      type: object
      properties:
        username:
          type: string
          maxLength: 50
        did_complete_signup:
          type: boolean
          readOnly: true
      required:
      - did_complete_signup
      - username
    Creator:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/PublicUser'
      required:
      - user
    DetailedError:
      type: object
      properties:
        detail:
          type: string
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
        participant_avatars:
          type: array
          items:
            type: string
          description: Get the first 3 participants who have an avatar_url set and
            are not the current user.
          readOnly: true
        participant_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        has_joined:
          type: boolean
          readOnly: true
        location_name:
          type: string
          maxLength: 100
        happening_at:
          type: string
          format: date-time
        hunt_id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - creator
      - description
      - happening_at
      - has_joined
      - hunt_id
      - id
      - location_name
      - name
      - participant_avatars
    EventJoin:
      type: object
      properties:
        has_joined:
          type: boolean
        participant_count:
          type: integer
      required:
      - has_joined
      - participant_count
    Hunt:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        event:
          $ref: '#/components/schemas/HuntEvent'
        clue_count:
          type: integer
          readOnly: true
      required:
      - clue_count
      - event
      - id
    HuntClue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        riddle:
          type: string
          maxLength: 1000
        order:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        location_threshold:
          type: number
          format: double
      required:
      - id
      - riddle
    HuntEvent:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        location_name:
          type: string
          maxLength: 100
        location_coordinates:
          $ref: '#/components/schemas/Point'
      required:
      - location_coordinates
      - location_name
      - name
    Login:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    Point:
      type: object
      description: Serializer for django.contrib.gis.geos.Point
      properties:
        long:
          type: number
          format: double
        lat:
          type: number
          format: double
      required:
      - lat
      - long
    PublicUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        username:
          type: string
          maxLength: 50
        avatar_url:
          type: string
          format: uri
          maxLength: 200
      required:
      - first_name
      - id
      - last_name
      - username
    UpdateLastKnownLocation:
      type: object
      properties:
        last_known_location:
          $ref: '#/components/schemas/Point'
      required:
      - last_known_location
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        avatar_url:
          type: string
          format: uri
          maxLength: 200
        did_complete_signup:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - first_name
      - id
      - last_name
      - username
    ValidationError:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
      required:
      - errors
  securitySchemes:
    JWTAuthentication:
      type: apiKey
      in: header
      name: x-access-token
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
