name: Django CI

on:
  push:
    branches: ["main", "feat/django-tests"]
    paths:
      - "backend/**"
      - ".github/workflows/django.yml"
  pull_request:
    branches: ["main"]
    paths:
      - "backend/**"
      - ".github/workflows/django.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.12-slim

    services:
      redis:
        image: redis/redis-stack-server:7.2.0-v6
      postgres:
        image: postgis/postgis:16-3.4-alpine
        env:
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Install GDAL
        working-directory: ./backend
        run: |
          apt update
          apt install -y --no-install-recommends binutils libpq-dev binutils libproj-dev gdal-bin
      - name: Install Postgis
        working-directory: ./backend
        run: |
          apt update
          apt install -y --no-install-recommends postgresql postgresql-contrib postgis postgresql-postgis-scripts
      - name: Install Dependencies
        working-directory: ./backend
        run: |
          python -m pip install pip --upgrade
          python -m pip install -r requirements.txt
      - name: Run Tests
        working-directory: ./backend
        env:
          REDIS_HOST: "redis"
          POSTGRES_HOST: "postgres"
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          JWT_ACCESS_TOKEN_SECRET: ${{ secrets.JWT_ACCESS_TOKEN_SECRET }}
          JWT_REFRESH_TOKEN_SECRET: ${{ secrets.JWT_REFRESH_TOKEN_SECRET }}
        run: |
          python manage.py test
